.\"
.\" Manpage of slst_diff and slst_rdiff function for Undefined-C library
.\"
.\" Created: 02/08/17 by Juillard Jean-Baptiste
.\" Updated: 02/08/17 by Juillard Jean-Baptiste
.\"
.\" This file is a part free software; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 3, or
.\" (at your option) any later version.
.\"
.\" There is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; see the file LICENSE.  If not, write to
.\" the Free Software Foundation, Inc., 51 Franklin Street, Fifth
.\" Floor, Boston, MA 02110-1301, USA.
.\"

.TH SLST_DIFF 3 "02/08/17" "Version 0.0" "Manuel du programmeur Undefined-C"

.SH NAME
.B slst_diff, slst_rdiff
.RB "	- Compare exhaustivement deux listes de type " slst_t (3).

.SH SYNOPSIS
.B #include <stdlst.h>

.BI "size_t	slst_diff(slst_t " **lst1 ", mslst_t " **diff1 ", slst_t " **lst2 ,
.BI "mslst_t " **diff2 ", int (" *fcmp ")(const void *, const size_t,"
.B const void *, const size_t));
.br
.BI "size_t	slst_diff(slst_t " **lst1 ", mslst_t " **diff1 ", slst_t " **lst2 ,
.BI "mslst_t " **diff2 ", int (" *fcmp ")(const void *, const size_t,"
.B const void *, const size_t));

.SH DESCRIPTION
.B slst_diff
.RI "compare exhaustivement " lst1 " et " lst2 " en fonction de " fcmp " et"
.RI "sauvegarde la liste des differences dans " diff1 " et " diff2 .
.IR lst1 ", " diff1 ", " lst2 ", " diff2 " et " fcmp " doivent etres des"
.RB "arguments valides tels qu'ils sont decrit dans la section " NOTES .
.RB "Dans tous les cas, " errno " est modifier par " slst_diff
.RB "tel que decrit dans la section " ERREURS .

.B slst_rdiff
.RI "compare exhaustivement et recursivement " lst1 " et " lst2 " en fonction"
.RI "de " fcmp " et sauvegarde la liste des differences dans " diff1 " et "
.IR  diff2 .
.IR lst1 ", " diff1 ", " lst2 ", " diff2 " et " fcmp " doivent etres des"
.RB "arguments valides tels qu'ils sont decrit dans la section " NOTES .
.RB "Dans tous les cas, " errno " est modifier par " slst_rdiff
.RB "tel que decrit dans la section " ERREURS .

.SH VALEUR DE RETOUR
.B slst_diff
.RI "retourne le nombre de differences trouve entre " lst1 " et " lst2 .
.RB "Si une erreur se produit , " slst_diff " retourne le nombre de differences"
.R trouve au moment ou se produit l'erreurs. Si aucune difference n'est trouve,
.BR slst_diff "retourne 0."

.BR slst_rdiff
.RI "retourne le nombre de differences trouve entre " lst1 " et " lst2 .
.RB "Si une erreur se produit , " slst_rdiff " retourne le nombre de differences"
.R trouve au moment ou se produit l'erreurs. Si aucune difference n'est trouve,
.BR slst_rdiff "retourne 0."

.SH ERREURS
.TP
.B 0
.R "Aucune erreur ne s'est prouite."
.TP
.B EINVAL
.R "La fonction a ete appele avec un (ou des) parametre(s) invalide(s)."
.TP
.B EOVERFLOW
.RB "Le nombre de difference depasse les limites du type " size_t .

.SH NOTES
.RI "- Pour toutes les fonctions, " lst1 " et " lst2 " doivent etres different"
.RI "de ((slst_t **)(NULL)), notez que " *lstX "=((slst_t *)(NULL))"
.R est valide et designe une liste vide.

.RI "- Pour toutes les fonctions, " diff1 " et " diff2 " doivent etres different"
.RI "de ((slst_t **)(NULL)) et " *diffX " doit etre egale a ((slst_t *)(NULL))."

.R "- Pour toutes les fonctions,"
.IR fcmp " est un pointeur vers une fonction de comparaison."
.RB "Celle-ci prend en parametre deux pointeurs " void " qui adressent les"
.RB "valeurs cles et deux " size_t " qui donnent les tailles des tampons"
.R contenant les valeurs cles.
.RB "Le premier pointeur sur " void " et le premier " size_t " sont ceux de"
.RI "la liste " lst1 " et les seconds ceux de la liste " lst2 .
.IR fcmp " doit retourne un entier positif si la valeur de la liste " lst1
.RI "est supperieur a la valeur de la liste " lst2 ", un entier negatif si la"
.RI "valeur de la liste " lst1 " est inferieur a la valeur de la liste " lst2
.R et 0 si les deux valeurs sont egales. Notez que les deux valeurs n'ont pas
.RI "besoin d'etres strictement egales pour que " fcmp " considere que se soit"
.R le cas.

.SH EXEMPLES

.SH AUTEUR
Juillard Jean-Baptiste

.SH VOIR AUSSI
.BR stdlst "(3), " slst_t "(3), " slst_cmp (3)
